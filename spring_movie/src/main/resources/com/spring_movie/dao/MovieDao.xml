<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  
<!-- mapper의 장점 : 동적 SQL가능(query문의 조건식이 아닌 c:tag로 조건문등을 사용 가능) -->
<mapper namespace="com.spring_movie.dao.MovieDao">
<!-- 	namespace="DAO패키지.interface이름" -->
	
	<select id="selectMovieList" resultType="com.spring_movie.dto.MovieDto">
	<!-- 	id="호출받은 DAO method이름" -->
	<!-- 						 resultType="DTO패키지.class이름" -->
		<!-- SELECT MVCODE, MVTITLE, MVPD, MVACTOR, MVGENRE, MVAGE, MVTIME, TO_CHAR(MVOPEN, 'YYYY-MM-DD') AS MVOPEN, MVPOSTER FROM MOVIES ORDER BY MVCODE -->
		SELECT MV.MVCODE, MV.MVTITLE, MV.MVPD, MV.MVACTOR, MV.MVGENRE, MV.MVAGE, MV.MVTIME, TO_CHAR(MV.MVOPEN,'YYYY-MM-DD') AS MVOPEN, MVPOSTER, NVL(RESC.RECOUNT, 0) AS RECOUNT, ROUND(100 * NVL(RESC.RECOUNT, 0) / (SELECT COUNT(*) FROM RESERVATION), 2) AS RERATE, NVL(RVLIKE.RVCOUNT, 0) AS RVLIKE, NVL(RVDISLIKE.RVCOUNT, 0) AS RVDISLIKE
		FROM MOVIES MV
		LEFT OUTER JOIN
		    (SELECT SC.SCMVCODE AS MVCODE, COUNT(*) AS RECOUNT
		    FROM RESERVATION RE
		    INNER JOIN SCHEDULES SC ON RE.RESCTHCODE = SC.SCTHCODE AND RE.RESCROOM = SC.SCROOM AND RE.RESCDATE = SC.SCDATE
		    GROUP BY SC.SCMVCODE) RESC
		    ON MV.MVCODE = RESC.MVCODE
		LEFT OUTER JOIN
		    (SELECT RVMVCODE, COUNT(RVRECOMMEND) AS RVCOUNT FROM REVIEW WHERE RVRECOMMEND = 1 GROUP BY RVMVCODE) RVLIKE
		    ON MV.MVCODE = RVLIKE.RVMVCODE
		LEFT OUTER JOIN
		    (SELECT RVMVCODE, COUNT(RVRECOMMEND) AS RVCOUNT FROM REVIEW WHERE RVRECOMMEND = 0 GROUP BY RVMVCODE) RVDISLIKE
		    ON MV.MVCODE = RVDISLIKE.RVMVCODE
		WHERE MV.MVSTATE = 1
		<!-- ORDER BY RERATE DESC NULLS LAST -->
		ORDER BY MVCODE
	</select>


	<select id="selectMovie" resultType="com.spring_movie.dto.MovieDto">
		<!-- SELECT MVCODE, MVTITLE, MVPD, MVACTOR, MVGENRE, MVAGE, MVTIME, TO_CHAR(MVOPEN, 'YYYY-MM-DD') AS MVOPEN, MVPOSTER FROM MOVIES WHERE MVCODE = #{mvcode} -->
		SELECT MV.MVCODE, MV.MVTITLE, MV.MVPD, MV.MVACTOR, MV.MVGENRE, MV.MVAGE, MV.MVTIME, TO_CHAR(MV.MVOPEN,'YYYY-MM-DD') AS MVOPEN, MVPOSTER, NVL(RESC.RECOUNT, 0) AS RECOUNT, ROUND(100 * NVL(RESC.RECOUNT, 0) / (SELECT COUNT(*) FROM RESERVATION), 2) AS RERATE, NVL(RVLIKE.RVCOUNT, 0) AS RVLIKE, NVL(RVDISLIKE.RVCOUNT, 0) AS RVDISLIKE
		FROM MOVIES MV
		LEFT OUTER JOIN
		    (SELECT SC.SCMVCODE AS MVCODE, COUNT(*) AS RECOUNT
		    FROM RESERVATION RE
		    INNER JOIN SCHEDULES SC ON RE.RESCTHCODE = SC.SCTHCODE AND RE.RESCROOM = SC.SCROOM AND RE.RESCDATE = SC.SCDATE
		    GROUP BY SC.SCMVCODE) RESC
		    ON MV.MVCODE = RESC.MVCODE
		LEFT OUTER JOIN
		    (SELECT RVMVCODE, COUNT(RVRECOMMEND) AS RVCOUNT FROM REVIEW WHERE RVRECOMMEND = 1 GROUP BY RVMVCODE) RVLIKE
		    ON MV.MVCODE = RVLIKE.RVMVCODE
		LEFT OUTER JOIN
		    (SELECT RVMVCODE, COUNT(RVRECOMMEND) AS RVCOUNT FROM REVIEW WHERE RVRECOMMEND = 0 GROUP BY RVMVCODE) RVDISLIKE
		    ON MV.MVCODE = RVDISLIKE.RVMVCODE
		WHERE MV.MVCODE = #{mvcode}
	</select>

	<select id="selectReserveMvList" resultType="com.spring_movie.dto.MovieDto">
		SELECT * 
		FROM MOVIES 
		WHERE MVCODE IN ( SELECT SCMVCODE FROM SCHEDULES <!-- WHERE SCDATE > SYSDATE -->)
		AND MVSTATE = 1
	</select>

	<select id="selectReserveThList" resultType="com.spring_movie.dto.TheaterDto">
	 	SELECT * 
	 	FROM THEATERS
	 	WHERE THCODE IN ( SELECT SCTHCODE FROM SCHEDULES <!-- WHERE SCDATE > SYSDATE -->) AND THSTATE = 1
	</select>


	<select id="getReserveThList" resultType="com.spring_movie.dto.TheaterDto">
		SELECT * 
		FROM THEATERS
		WHERE THCODE IN (SELECT SCTHCODE FROM SCHEDULES WHERE SCMVCODE = #{mvcode} AND THSTATE = 1 <!-- AND SCDATE > SYSDATE -->)
	</select>

	<select id="getReserveScDateList" resultType="com.spring_movie.dto.ScheduleDto">
		SELECT TO_CHAR(SCDATE,'YYYY-MM-DD') as SCDATE
		FROM SCHEDULES
		WHERE SCMVCODE = #{mvcode} AND SCTHCODE = #{thcode} <!-- AND SCDATE > SYSDATE -->
		GROUP BY TO_CHAR(SCDATE,'YYYY-MM-DD')
		ORDER BY SCDATE
	</select>
	
	<select id="getScRoomTimeList" resultType="com.spring_movie.dto.ScheduleDto">
		SELECT SCROOM, TO_CHAR(SCDATE,'HH24:MI') AS SCDATE
		FROM SCHEDULES
		WHERE SCMVCODE = #{mvcode} AND SCTHCODE = #{thcode} AND TO_CHAR(SCDATE,'YYYY-MM-DD') = #{scdate} <!-- AND SCDATE > SYSDATE -->
		ORDER BY SCROOM
	</select>
	
	<select id="reservationList" resultType="com.spring_movie.dto.ReserveInfoDto">
		SELECT MV.MVCODE, MV.MVTITLE, MV.MVPOSTER, TH.THNAME, SC.SCROOM, TO_CHAR(SC.SCDATE, 'YYYY-MM-DD HH24:MI') AS SCDATE, RE.RECODE, RE.REAMOUNT , RV.RVRECODE AS RVCHECK
		FROM RESERVATION RE 
		    INNER JOIN SCHEDULES SC ON RE.RESCTHCODE = SC.SCTHCODE AND RE.RESCROOM = SC.SCROOM AND RE.RESCDATE = SC.SCDATE
		    INNER JOIN MOVIES MV ON SC.SCMVCODE = MV.MVCODE 
		    INNER JOIN THEATERS TH ON SC.SCTHCODE = TH.THCODE
		    LEFT OUTER JOIN REVIEW RV ON RE.RECODE = RV.RVRECODE
		WHERE RE.REMID = #{remid}
	</select>
	
	<select id="selReserveInfo" resultType="com.spring_movie.dto.ReserveInfoDto">
		SELECT MV.MVCODE, MV.MVTITLE, MV.MVPOSTER, TH.THNAME, SC.SCROOM, TO_CHAR(SC.SCDATE, 'YYYY-MM-DD HH24:MI') AS SCDATE, RE.RECODE, RE.REAMOUNT
		FROM RESERVATION RE 
		    INNER JOIN SCHEDULES SC ON RE.RESCTHCODE = SC.SCTHCODE AND RE.RESCROOM = SC.SCROOM AND RE.RESCDATE = SC.SCDATE 
		    INNER JOIN MOVIES MV ON SC.SCMVCODE = MV.MVCODE 
		    INNER JOIN THEATERS TH ON SC.SCTHCODE = TH.THCODE 
		WHERE RE.RECODE = #{recode}
	</select>
	
	<select id="selectReview" resultType="com.spring_movie.dto.ReviewDto">
		SELECT RV.RVRECODE, RV.RVMID, RV.RVMVCODE, RV.RVCOMMENT, TO_CHAR(RV.RVDATE, 'YYYY-MM-DD') AS RVDATE, RV.RVRECOMMEND, MV.MPROFILE
		FROM REVIEW RV
		INNER JOIN MEMBERS MV ON RV.RVMID = MV.MID
		WHERE RVMVCODE = #{mvcode}
	</select>
	
	<select id="getMyReview" resultType="com.spring_movie.dto.ReviewDto">
		SELECT RV.RVRECODE, RV.RVMID, RV.RVMVCODE, RV.RVCOMMENT, TO_CHAR(RV.RVDATE, 'YYYY-MM-DD') AS RVDATE, RV.RVRECOMMEND, MV.MPROFILE
		FROM REVIEW RV
		INNER JOIN MEMBERS MV ON RV.RVMID = MV.MID
		WHERE RV.RVMVCODE = #{rvmvcode}
		<if test="rvmid != ''">
		AND RV.RVMID = #{rvmid}
		</if>
	</select>
	
	<select id="selectMvCountReservation" resultType="int">
		SELECT COUNT(*)
	    FROM RESERVATION RE
	    INNER JOIN SCHEDULES SC ON RE.RESCTHCODE = SC.SCTHCODE AND RE.RESCROOM = SC.SCROOM AND RE.RESCDATE = SC.SCDATE
		WHERE SC.SCMVCODE = #{mvcode}
	</select>
	
	
	<select id="searchMovieList" resultType="com.spring_movie.dto.MovieDto">
		SELECT DISTINCT MV.MVCODE, MV.MVTITLE, MV.MVPD, MV.MVACTOR, MV.MVGENRE, MV.MVAGE, MV.MVTIME, TO_CHAR(MV.MVOPEN,'YYYY-MM-DD') AS MVOPEN, MVPOSTER,NVL(RVLIKE.RVCOUNT, 0) AS RVLIKE, ROUND(100 * NVL(RESC.RECOUNT, 0) / (SELECT COUNT(*) FROM RESERVATION), 2) AS RERATE
		FROM MOVIES MV
		<!-- 동적 SQL -->
		<!-- 동적 SQL로 조건문 등의 변수로 매개변수를 사용할 경우 #{매개변수}가 아닌 그냥 매개변수 이름으로 사용한다.-->
		<if test="scCheck == 'schedule'">
			INNER JOIN SCHEDULES SC ON SC.SCMVCODE = MV.MVCODE
		</if>		
		LEFT OUTER JOIN
		    (SELECT SC.SCMVCODE AS MVCODE, COUNT(*) AS RECOUNT
		    FROM RESERVATION RE
		    INNER JOIN SCHEDULES SC ON RE.RESCTHCODE = SC.SCTHCODE AND RE.RESCROOM = SC.SCROOM AND RE.RESCDATE = SC.SCDATE
		    GROUP BY SC.SCMVCODE) RESC
		    ON MV.MVCODE = RESC.MVCODE
		LEFT OUTER JOIN
		    (SELECT RVMVCODE, COUNT(RVRECOMMEND) AS RVCOUNT FROM REVIEW WHERE RVRECOMMEND = 1 GROUP BY RVMVCODE) RVLIKE
		    ON MV.MVCODE = RVLIKE.RVMVCODE
	    WHERE MVTITLE LIKE #{searchWord}
		<!-- WHERE MVTITLE LIKE '%'||#{searchWord}||'%' -->
	</select>
	
</mapper>
